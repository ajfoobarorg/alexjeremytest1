---
description: Svelte component structure standards
globs: "**/*.svelte"
alwaysApply: false
---
# Svelte Component Structure

This rule defines the structure and organization of Svelte component files.

<rule>
name: svelte_structure
description: Standards for Svelte component organization and structure

filters:
  - type: file_extension
    pattern: "\\.svelte$"
  - type: event
    pattern: "file_edit"

actions:
  - type: suggest
    message: |
      Svelte components should follow this structure:

      1. Script section at the top
      2. Style section in the middle
      3. HTML template at the bottom

      ```svelte
      <script>
        // JS logic
        export let props;
        
        // State and variables
        let count = 0;
        
        // Functions
        function handleClick() {
          count += 1;
        }
      </script>

      <style>
        /* CSS styles */
        .container {
          max-width: 800px;
          margin: 0 auto;
        }
      </style>

      <!-- HTML template -->
      <div class="container">
        <h1>Content</h1>
        <button on:click={handleClick}>
          Clicked {count} times
        </button>
      </div>
      ```

      Additional guidelines:
      - Group related code within each section
      - Destructure props at the top of the script section
      - Place lifecycle functions together
      - Order imports logically (Svelte imports first, then components, then utilities)
      - Use scoped styles (no :global unless necessary)

examples:
  - input: |
      <!-- HTML first, then script, then style -->
      <div>
        <h1>Hello {name}</h1>
      </div>
      
      <script>
        export let name;
      </script>
      
      <style>
        h1 { color: blue; }
      </style>
  - output: |
      <script>
        export let name;
      </script>
      
      <style>
        h1 { color: blue; }
      </style>
      
      <div>
        <h1>Hello {name}</h1>
      </div>

metadata:
  priority: medium
  version: 1.0
</rule>

