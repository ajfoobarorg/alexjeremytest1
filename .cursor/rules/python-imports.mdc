---
description: 
globs: 
alwaysApply: false
---
# Python Imports

This rule defines standards for organizing imports in Python files.

<rule>
name: python_imports
description: Python import organization and standards for this project

filters:
  - type: file_extension
    pattern: "\\.py$"
  - type: event
    pattern: "file_edit"

actions:
  - type: suggest
    message: |
      Python imports must be organized in the following order, with a blank line between each group:

      1. Standard library imports
      2. Related third-party imports
      3. Local application/library specific imports

      Example:
      ```python
      # Standard library
      import os
      import sys
      from datetime import datetime, timedelta
      
      # Third-party
      import fastapi
      from peewee import Model, CharField
      
      # Local
      from config import settings
      from models import User
      from schemas import UserSchema
      ```

      Additional guidelines:
      - Sort imports alphabetically within each group
      - Use absolute imports rather than relative imports
      - Avoid wildcard imports (from module import *)
      - Prefer importing modules over individual objects for standard library
      - For very long imports, use multi-line imports with parentheses
      - Do not import unused modules/symbols

examples:
  - input: |
      from models import Player
      import datetime
      from schemas import LoginSchema
      import random, json
      from fastapi import FastAPI
  - output: |
      # Standard library
      import datetime
      import json
      import random
      
      # Third-party
      from fastapi import FastAPI
      
      # Local
      from models import Player
      from schemas import LoginSchema

metadata:
  priority: medium
  version: 1.0
</rule>

